//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\projects\FluentTranslate\src\FluentTranslate.FtlParser\Fluent.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class FluentLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		Comment3=1, Comment2=2, Comment1=3, CommentLine3=4, CommentLine2=5, CommentLine1=6, 
		LINE_END=7, COMMENT_MARK3=8, COMMENT_MARK2=9, COMMENT_MARK1=10, COMMENT=11, 
		WS=12, EQUALS=13, WORD=14, TEXT=15, WHITESPACE=16;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"Comment3", "Comment2", "Comment1", "CommentLine3", "CommentLine2", "CommentLine1", 
		"LOWERCASE", "UPPERCASE", "SHARP", "ANY", "NEWLINE", "LINE_END", "COMMENT_MARK3", 
		"COMMENT_MARK2", "COMMENT_MARK1", "COMMENT", "WS", "EQUALS", "WORD", "TEXT", 
		"WHITESPACE"
	};


	public FluentLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FluentLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, "'###'", "'##'", "'#'", 
		null, null, "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "Comment3", "Comment2", "Comment1", "CommentLine3", "CommentLine2", 
		"CommentLine1", "LINE_END", "COMMENT_MARK3", "COMMENT_MARK2", "COMMENT_MARK1", 
		"COMMENT", "WS", "EQUALS", "WORD", "TEXT", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Fluent.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static FluentLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x12', '\x92', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x3', '\x2', '\x6', '\x2', '/', '\n', '\x2', '\r', 
		'\x2', '\xE', '\x2', '\x30', '\x3', '\x3', '\x6', '\x3', '\x34', '\n', 
		'\x3', '\r', '\x3', '\xE', '\x3', '\x35', '\x3', '\x4', '\x6', '\x4', 
		'\x39', '\n', '\x4', '\r', '\x4', '\xE', '\x4', ':', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x5', '\x5', '@', '\n', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x5', '\x6', 'G', '\n', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x5', '\a', 'N', '\n', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\a', '\v', 'Y', '\n', '\v', '\f', '\v', '\xE', '\v', '\\', '\v', '\v', 
		'\x3', '\f', '\x5', '\f', '_', '\n', '\f', '\x3', '\f', '\x3', '\f', '\x5', 
		'\f', '\x63', '\n', '\f', '\x3', '\r', '\x3', '\r', '\x5', '\r', 'g', 
		'\n', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x6', '\x12', 'u', '\n', '\x12', 
		'\r', '\x12', '\xE', '\x12', 'v', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x6', '\x14', '\x7F', 
		'\n', '\x14', '\r', '\x14', '\xE', '\x14', '\x80', '\x3', '\x15', '\x3', 
		'\x15', '\a', '\x15', '\x85', '\n', '\x15', '\f', '\x15', '\xE', '\x15', 
		'\x88', '\v', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x6', 
		'\x16', '\x8D', '\n', '\x16', '\r', '\x16', '\xE', '\x16', '\x8E', '\x3', 
		'\x16', '\x3', '\x16', '\x4', 'Z', '\x86', '\x2', '\x17', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\x2', '\x11', '\x2', '\x13', '\x2', '\x15', '\x2', '\x17', '\x2', '\x19', 
		'\t', '\x1B', '\n', '\x1D', '\v', '\x1F', '\f', '!', '\r', '#', '\xE', 
		'%', '\xF', '\'', '\x10', ')', '\x11', '+', '\x12', '\x3', '\x2', '\x5', 
		'\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', '\x4', '\x2', '\v', 
		'\v', '\"', '\"', '\x2', '\x9B', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'+', '\x3', '\x2', '\x2', '\x2', '\x3', '.', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x33', '\x3', '\x2', '\x2', '\x2', '\a', '\x38', '\x3', '\x2', 
		'\x2', '\x2', '\t', '<', '\x3', '\x2', '\x2', '\x2', '\v', '\x43', '\x3', 
		'\x2', '\x2', '\x2', '\r', 'J', '\x3', '\x2', '\x2', '\x2', '\xF', 'Q', 
		'\x3', '\x2', '\x2', '\x2', '\x11', 'S', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'U', '\x3', '\x2', '\x2', '\x2', '\x15', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\x17', '\x62', '\x3', '\x2', '\x2', '\x2', '\x19', '\x66', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 'h', '\x3', '\x2', '\x2', '\x2', '\x1D', 'l', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', 'o', '\x3', '\x2', '\x2', '\x2', '!', 'q', 
		'\x3', '\x2', '\x2', '\x2', '#', 't', '\x3', '\x2', '\x2', '\x2', '%', 
		'z', '\x3', '\x2', '\x2', '\x2', '\'', '~', '\x3', '\x2', '\x2', '\x2', 
		')', '\x82', '\x3', '\x2', '\x2', '\x2', '+', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '-', '/', '\x5', '\t', '\x5', '\x2', '.', '-', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x30', '\x3', '\x2', '\x2', '\x2', '\x30', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x30', '\x31', '\x3', '\x2', '\x2', '\x2', '\x31', '\x4', 
		'\x3', '\x2', '\x2', '\x2', '\x32', '\x34', '\x5', '\v', '\x6', '\x2', 
		'\x33', '\x32', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\x35', '\x33', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', 
		'\x3', '\x2', '\x2', '\x2', '\x36', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x37', '\x39', '\x5', '\r', '\a', '\x2', '\x38', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x39', ':', '\x3', '\x2', '\x2', '\x2', ':', '\x38', '\x3', 
		'\x2', '\x2', '\x2', ':', ';', '\x3', '\x2', '\x2', '\x2', ';', '\b', 
		'\x3', '\x2', '\x2', '\x2', '<', '?', '\x5', '\x1B', '\xE', '\x2', '=', 
		'>', '\a', '\"', '\x2', '\x2', '>', '@', '\x5', '!', '\x11', '\x2', '?', 
		'=', '\x3', '\x2', '\x2', '\x2', '?', '@', '\x3', '\x2', '\x2', '\x2', 
		'@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\x5', '\x19', 
		'\r', '\x2', '\x42', '\n', '\x3', '\x2', '\x2', '\x2', '\x43', '\x46', 
		'\x5', '\x1D', '\xF', '\x2', '\x44', '\x45', '\a', '\"', '\x2', '\x2', 
		'\x45', 'G', '\x5', '!', '\x11', '\x2', '\x46', '\x44', '\x3', '\x2', 
		'\x2', '\x2', '\x46', 'G', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\x3', 
		'\x2', '\x2', '\x2', 'H', 'I', '\x5', '\x19', '\r', '\x2', 'I', '\f', 
		'\x3', '\x2', '\x2', '\x2', 'J', 'M', '\x5', '\x1F', '\x10', '\x2', 'K', 
		'L', '\a', '\"', '\x2', '\x2', 'L', 'N', '\x5', '!', '\x11', '\x2', 'M', 
		'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\x5', '\x19', '\r', '\x2', 
		'P', '\xE', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\t', '\x2', '\x2', 
		'\x2', 'R', '\x10', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\t', '\x3', 
		'\x2', '\x2', 'T', '\x12', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', 
		'%', '\x2', '\x2', 'V', '\x14', '\x3', '\x2', '\x2', '\x2', 'W', 'Y', 
		'\v', '\x2', '\x2', '\x2', 'X', 'W', '\x3', '\x2', '\x2', '\x2', 'Y', 
		'\\', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', 
		'Z', 'X', '\x3', '\x2', '\x2', '\x2', '[', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', ']', '_', '\a', '\xF', '\x2', 
		'\x2', '^', ']', '\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', 
		'\x2', '_', '`', '\x3', '\x2', '\x2', '\x2', '`', '\x63', '\a', '\f', 
		'\x2', '\x2', '\x61', '\x63', '\a', '\xF', '\x2', '\x2', '\x62', '^', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x18', '\x3', '\x2', '\x2', '\x2', '\x64', 'g', '\x5', '\x17', 
		'\f', '\x2', '\x65', 'g', '\a', '\x2', '\x2', '\x3', '\x66', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x66', '\x65', '\x3', '\x2', '\x2', '\x2', 'g', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\a', '%', '\x2', '\x2', 
		'i', 'j', '\a', '%', '\x2', '\x2', 'j', 'k', '\a', '%', '\x2', '\x2', 
		'k', '\x1C', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', '%', '\x2', '\x2', 
		'm', 'n', '\a', '%', '\x2', '\x2', 'n', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'o', 'p', '\a', '%', '\x2', '\x2', 'p', ' ', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\x5', '\x15', '\v', '\x2', 'r', '\"', '\x3', '\x2', '\x2', 
		'\x2', 's', 'u', '\t', '\x4', '\x2', '\x2', 't', 's', '\x3', '\x2', '\x2', 
		'\x2', 'u', 'v', '\x3', '\x2', '\x2', '\x2', 'v', 't', '\x3', '\x2', '\x2', 
		'\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', 
		'\x2', 'x', 'y', '\b', '\x12', '\x2', '\x2', 'y', '$', '\x3', '\x2', '\x2', 
		'\x2', 'z', '{', '\a', '?', '\x2', '\x2', '{', '&', '\x3', '\x2', '\x2', 
		'\x2', '|', '\x7F', '\x5', '\xF', '\b', '\x2', '}', '\x7F', '\x5', '\x11', 
		'\t', '\x2', '~', '|', '\x3', '\x2', '\x2', '\x2', '~', '}', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', '\x2', '\x2', '\x80', '~', 
		'\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '(', '\x3', '\x2', '\x2', '\x2', '\x82', '\x86', '\a', '$', '\x2', 
		'\x2', '\x83', '\x85', '\v', '\x2', '\x2', '\x2', '\x84', '\x83', '\x3', 
		'\x2', '\x2', '\x2', '\x85', '\x88', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\x3', '\x2', '\x2', '\x2', '\x86', '\x84', '\x3', '\x2', '\x2', 
		'\x2', '\x87', '\x89', '\x3', '\x2', '\x2', '\x2', '\x88', '\x86', '\x3', 
		'\x2', '\x2', '\x2', '\x89', '\x8A', '\a', '$', '\x2', '\x2', '\x8A', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8D', '\t', '\x4', '\x2', '\x2', 
		'\x8C', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', 
		'\x2', '\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', 
		'\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', 
		'\x90', '\x91', '\b', '\x16', '\x2', '\x2', '\x91', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x12', '\x2', '\x30', '\x35', ':', '?', '\x46', 'M', 'Z', 
		'^', '\x62', '\x66', 'v', '~', '\x80', '\x86', '\x8E', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
