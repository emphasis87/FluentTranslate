//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\projects\FluentTranslate\src\FluentTranslate.Parser\Fluent.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class FluentLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, INLINE_CHAR=16, 
		INDENTED_CHAR=17, SPECIAL_TEXT_CHAR=18, QUOTED_CHAR=19, SPECIAL_CHAR=20, 
		STRING_LITERAL=21, NUMBER_LITERAL=22, IDENTIFIER=23, EQUALS=24, WS=25, 
		SPACES=26, CMT3=27, CMT2=28, CMT1=29, LINE_END=30, NEWLINE=31;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "INLINE_CHAR", "INDENTED_CHAR", 
		"SPECIAL_TEXT_CHAR", "QUOTED_CHAR", "SPECIAL_CHAR", "STRING_LITERAL", 
		"NUMBER_LITERAL", "IDENTIFIER", "EQUALS", "WS", "SPACES", "CMT3", "CMT2", 
		"CMT1", "LINE_END", "NEWLINE"
	};


	public FluentLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FluentLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'-'", "'.'", "'{'", "'}'", "'->'", "'$'", "'('", "')'", "','", 
		"':'", "'*'", "'['", "']'", "' '", "'\t'", null, null, null, null, null, 
		null, null, null, null, null, null, "'###'", "'##'", "'#'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "INLINE_CHAR", "INDENTED_CHAR", "SPECIAL_TEXT_CHAR", 
		"QUOTED_CHAR", "SPECIAL_CHAR", "STRING_LITERAL", "NUMBER_LITERAL", "IDENTIFIER", 
		"EQUALS", "WS", "SPACES", "CMT3", "CMT2", "CMT1", "LINE_END", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Fluent.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static FluentLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '!', '\xB3', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\a', '\x16', 'n', 
		'\n', '\x16', '\f', '\x16', '\xE', '\x16', 'q', '\v', '\x16', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x5', '\x17', 'v', '\n', '\x17', '\x3', 
		'\x17', '\x6', '\x17', 'y', '\n', '\x17', '\r', '\x17', '\xE', '\x17', 
		'z', '\x3', '\x17', '\x3', '\x17', '\x6', '\x17', '\x7F', '\n', '\x17', 
		'\r', '\x17', '\xE', '\x17', '\x80', '\x5', '\x17', '\x83', '\n', '\x17', 
		'\x3', '\x18', '\x3', '\x18', '\a', '\x18', '\x87', '\n', '\x18', '\f', 
		'\x18', '\xE', '\x18', '\x8A', '\v', '\x18', '\x3', '\x19', '\x5', '\x19', 
		'\x8D', '\n', '\x19', '\x3', '\x19', '\x3', '\x19', '\x5', '\x19', '\x91', 
		'\n', '\x19', '\x3', '\x1A', '\x5', '\x1A', '\x94', '\n', '\x1A', '\x3', 
		'\x1A', '\x6', '\x1A', '\x97', '\n', '\x1A', '\r', '\x1A', '\xE', '\x1A', 
		'\x98', '\x3', '\x1B', '\x6', '\x1B', '\x9C', '\n', '\x1B', '\r', '\x1B', 
		'\xE', '\x1B', '\x9D', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', 
		'\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x5', '\x1F', '\xAB', '\n', '\x1F', 
		'\x3', ' ', '\x5', ' ', '\xAE', '\n', ' ', '\x3', ' ', '\x3', ' ', '\x5', 
		' ', '\xB2', '\n', ' ', '\x2', '\x2', '!', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', 
		'\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', 
		'\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x3', '\x2', '\t', '\x6', '\x2', 
		'\f', '\f', '\xF', '\xF', '}', '}', '\x7F', '\x7F', '\t', '\x2', '\f', 
		'\f', '\xF', '\xF', ',', ',', '\x30', '\x30', ']', ']', '}', '}', '\x7F', 
		'\x7F', '\x4', '\x2', '}', '}', '\x7F', '\x7F', '\x4', '\x2', '$', '$', 
		'^', '^', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\a', '\x2', '/', '/', '\x32', ';', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x2', '\xC1', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', 
		'\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x41', '\x3', '\x2', '\x2', '\x2', '\x5', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x45', '\x3', '\x2', '\x2', '\x2', '\t', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\v', 'I', '\x3', '\x2', '\x2', '\x2', '\r', 'L', 
		'\x3', '\x2', '\x2', '\x2', '\xF', 'N', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'P', '\x3', '\x2', '\x2', '\x2', '\x13', 'R', '\x3', '\x2', '\x2', '\x2', 
		'\x15', 'T', '\x3', '\x2', '\x2', '\x2', '\x17', 'V', '\x3', '\x2', '\x2', 
		'\x2', '\x19', 'X', '\x3', '\x2', '\x2', '\x2', '\x1B', 'Z', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\\', '\x3', '\x2', '\x2', '\x2', '\x1F', '^', '\x3', 
		'\x2', '\x2', '\x2', '!', '`', '\x3', '\x2', '\x2', '\x2', '#', '\x62', 
		'\x3', '\x2', '\x2', '\x2', '%', '\x64', '\x3', '\x2', '\x2', '\x2', '\'', 
		'\x66', '\x3', '\x2', '\x2', '\x2', ')', 'i', '\x3', '\x2', '\x2', '\x2', 
		'+', 'k', '\x3', '\x2', '\x2', '\x2', '-', 'u', '\x3', '\x2', '\x2', '\x2', 
		'/', '\x84', '\x3', '\x2', '\x2', '\x2', '\x31', '\x8C', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x96', '\x3', '\x2', '\x2', '\x2', '\x35', '\x9B', 
		'\x3', '\x2', '\x2', '\x2', '\x37', '\x9F', '\x3', '\x2', '\x2', '\x2', 
		'\x39', '\xA3', '\x3', '\x2', '\x2', '\x2', ';', '\xA6', '\x3', '\x2', 
		'\x2', '\x2', '=', '\xAA', '\x3', '\x2', '\x2', '\x2', '?', '\xB1', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x42', '\a', '/', '\x2', '\x2', '\x42', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', '\x30', '\x2', 
		'\x2', '\x44', '\x6', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', 
		'}', '\x2', '\x2', '\x46', '\b', '\x3', '\x2', '\x2', '\x2', 'G', 'H', 
		'\a', '\x7F', '\x2', '\x2', 'H', '\n', '\x3', '\x2', '\x2', '\x2', 'I', 
		'J', '\a', '/', '\x2', '\x2', 'J', 'K', '\a', '@', '\x2', '\x2', 'K', 
		'\f', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', '&', '\x2', '\x2', 'M', 
		'\xE', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', '*', '\x2', '\x2', 
		'O', '\x10', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', '+', '\x2', '\x2', 
		'Q', '\x12', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', '.', '\x2', '\x2', 
		'S', '\x14', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', '<', '\x2', '\x2', 
		'U', '\x16', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', ',', '\x2', '\x2', 
		'W', '\x18', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', ']', '\x2', '\x2', 
		'Y', '\x1A', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\a', '_', '\x2', '\x2', 
		'[', '\x1C', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\a', '\"', '\x2', 
		'\x2', ']', '\x1E', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', '\v', 
		'\x2', '\x2', '_', ' ', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\n', 
		'\x2', '\x2', '\x2', '\x61', '\"', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x63', '\n', '\x3', '\x2', '\x2', '\x63', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x65', '\t', '\x4', '\x2', '\x2', '\x65', '&', '\x3', '\x2', 
		'\x2', '\x2', '\x66', 'g', '\a', '^', '\x2', '\x2', 'g', 'h', '\x5', ')', 
		'\x15', '\x2', 'h', '(', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\t', '\x5', 
		'\x2', '\x2', 'j', '*', '\x3', '\x2', '\x2', '\x2', 'k', 'o', '\a', '$', 
		'\x2', '\x2', 'l', 'n', '\x5', '\'', '\x14', '\x2', 'm', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'q', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'o', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', '$', 
		'\x2', '\x2', 's', ',', '\x3', '\x2', '\x2', '\x2', 't', 'v', '\a', '/', 
		'\x2', '\x2', 'u', 't', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'x', '\x3', '\x2', '\x2', '\x2', 'w', 'y', '\t', '\x6', 
		'\x2', '\x2', 'x', 'w', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\x3', '\x2', 
		'\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', '\x2', 
		'\x2', '\x2', '{', '\x82', '\x3', '\x2', '\x2', '\x2', '|', '~', '\a', 
		'\x30', '\x2', '\x2', '}', '\x7F', '\t', '\x6', '\x2', '\x2', '~', '}', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', '\x2', '\x2', 
		'\x80', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\x3', '\x2', 
		'\x2', '\x2', '\x81', '\x83', '\x3', '\x2', '\x2', '\x2', '\x82', '|', 
		'\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '.', '\x3', '\x2', '\x2', '\x2', '\x84', '\x88', '\t', '\a', '\x2', 
		'\x2', '\x85', '\x87', '\t', '\b', '\x2', '\x2', '\x86', '\x85', '\x3', 
		'\x2', '\x2', '\x2', '\x87', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x88', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x30', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', 
		'\x2', '\x2', '\x2', '\x8B', '\x8D', '\x5', '\x35', '\x1B', '\x2', '\x8C', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x90', '\a', 
		'?', '\x2', '\x2', '\x8F', '\x91', '\x5', '\x35', '\x1B', '\x2', '\x90', 
		'\x8F', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x32', '\x3', '\x2', '\x2', '\x2', '\x92', '\x94', '\x5', 
		'\x35', '\x1B', '\x2', '\x93', '\x92', '\x3', '\x2', '\x2', '\x2', '\x93', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '\x94', '\x97', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x97', '\x5', '=', '\x1F', '\x2', '\x96', '\x93', '\x3', 
		'\x2', '\x2', '\x2', '\x96', '\x95', '\x3', '\x2', '\x2', '\x2', '\x97', 
		'\x98', '\x3', '\x2', '\x2', '\x2', '\x98', '\x96', '\x3', '\x2', '\x2', 
		'\x2', '\x98', '\x99', '\x3', '\x2', '\x2', '\x2', '\x99', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x9C', '\a', '\"', '\x2', '\x2', '\x9B', 
		'\x9A', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\x3', '\x2', '\x2', 
		'\x2', '\x9D', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\x36', '\x3', '\x2', '\x2', '\x2', '\x9F', 
		'\xA0', '\a', '%', '\x2', '\x2', '\xA0', '\xA1', '\a', '%', '\x2', '\x2', 
		'\xA1', '\xA2', '\a', '%', '\x2', '\x2', '\xA2', '\x38', '\x3', '\x2', 
		'\x2', '\x2', '\xA3', '\xA4', '\a', '%', '\x2', '\x2', '\xA4', '\xA5', 
		'\a', '%', '\x2', '\x2', '\xA5', ':', '\x3', '\x2', '\x2', '\x2', '\xA6', 
		'\xA7', '\a', '%', '\x2', '\x2', '\xA7', '<', '\x3', '\x2', '\x2', '\x2', 
		'\xA8', '\xAB', '\x5', '?', ' ', '\x2', '\xA9', '\xAB', '\a', '\x2', '\x2', 
		'\x3', '\xAA', '\xA8', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xA9', '\x3', 
		'\x2', '\x2', '\x2', '\xAB', '>', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAE', '\a', '\xF', '\x2', '\x2', '\xAD', '\xAC', '\x3', '\x2', '\x2', 
		'\x2', '\xAD', '\xAE', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xAF', '\x3', 
		'\x2', '\x2', '\x2', '\xAF', '\xB2', '\a', '\f', '\x2', '\x2', '\xB0', 
		'\xB2', '\a', '\xF', '\x2', '\x2', '\xB1', '\xAD', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xB0', '\x3', '\x2', '\x2', '\x2', '\xB2', '@', '\x3', 
		'\x2', '\x2', '\x2', '\x13', '\x2', 'o', 'u', 'z', '\x80', '\x82', '\x86', 
		'\x88', '\x8C', '\x90', '\x93', '\x96', '\x98', '\x9D', '\xAA', '\xAD', 
		'\xB1', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
